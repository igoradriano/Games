package graficos2;

import java.awt.Dimension; //importando Dimension
import javax.swing.JFrame;  //importando JFrame
import java.awt.Canvas;    // importando Canvas
public class Game extends Canvas implements Runnable{  //Classe Game com Interface Runnable
	
	public static JFrame frame;  //declarando frame do tipo JFrame
	private final int  WIDTH = 160; //declarando constante WIDTH com tamanho	
	private final int HEIGTH = 120;
	private final int SCALE = 3;
	private Thread thread;
	private boolean isRunning = true;
	
	public Game() {   //Método Construtor	
		this.setPreferredSize(new Dimension(WIDTH*SCALE,HEIGTH*SCALE));  //criando Janela passando as constantes como parâmetro
		initFrame();
	}
	public void initFrame() {
		frame = new JFrame("Janela do Igor");   //instanciando JFrame
		frame.add(this);  //'this' se refere ao Canvas, no caso a linha de cima, this.setPreferenceSize
		frame.setResizable(false); //Não quero que usuário consiga redimensionar a Janela
		frame.pack(); //método do frame para depois que adicionar o canvas, calcular certo as dimensoes e mostrar
		frame.setLocationRelativeTo(null);  //abre no centro da tela
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); //Chamando método frame dizendo que quando clicar eu quero que de fato feche sem continuar executando o programa.
		frame.setVisible(true);  //Quando inicializar ja está visível
		
	}
	public synchronized void start() {
		thread = new Thread(this);   //Essa classe game vai como parâmetro no thread
		isRunning = true;
		thread.start();
		
	}
	public synchronized void stop() {
		
	}
	public static void main(String[] args) {
		Game game = new Game(); 
		game.start();	
	}
	
	public void tick() {
		
	}
	
	public void render() {
		
	}
	public void run() {	
		long lastTime = System.nanoTime(); //tempo atual d pc em segundos
		double amoutOfTicks = 500.0;
		double ns = 1000000000 / amoutOfTicks;
		double delta = 0;
		int frames = 0;
		double timer = System.currentTimeMillis();
		while(isRunning) {
			long now = System.nanoTime();
			delta+= (now - lastTime) / ns;
			lastTime = now;
			if (delta >= 1
					
					) {
				tick();
				render();
				frames ++; 
				delta --;
				
			}
			if (System.currentTimeMillis() - timer >= 1000) {
				System.out.println("FPS: "+ frames);
				frames = 0;
				timer += 1000;
			}
		}
	}

}
